name: Test

on: [ pull_request ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-XX:+HeapDumpOnOutOfMemoryError -XX:MetaspaceSize=1g"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, macos-11, ubuntu-latest, ubuntu-20.04, windows-latest, windows-2019 ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Caches [ Gradle Wrapper ]
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.*') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Setup Caches [ Konan ]
        uses: actions/cache@v1
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('gradle/libs.versions.toml') }}
          restore-keys: ${{ runner.os }}-konan-

      - name: Setup Caches [ Gradle Caches ]
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ matrix.os }}-gradle-caches-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('gradle/libs.versions.toml') }}
          restore-keys: ${{ matrix.os }}-gradle-caches-

      - name: Setup JDK
        uses: actions/setup-java@v3.4.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Run macOS Tests
        if: matrix.os == 'macos-latest'
        run: >
          ./gradlew check --stacktrace
          -PKMP_TARGETS="JVM,JS,IOS_ARM32,IOS_ARM64,IOS_X64,IOS_SIMULATOR_ARM64,MACOS_ARM64,MACOS_X64,TVOS_ARM64,TVOS_X64,TVOS_SIMULATOR_ARM64,WATCHOS_ARM32,WATCHOS_ARM64,WATCHOS_DEVICE_ARM64,WATCHOS_X64,WATCHOS_X86,WATCHOS_SIMULATOR_ARM64,WASM,WASM_32"
      - name: Run macOS JVM Tests
        if: matrix.os == 'macos-11'
        run: >
          ./gradlew check --stacktrace
          -PKMP_TARGETS="JVM"
      - name: Run Linux Tests
        if: matrix.os == 'ubuntu-latest'
        run: >
          ./gradlew check --stacktrace
          -PKMP_TARGETS="ANDROID,JVM,JS,ANDROID_ARM32,ANDROID_ARM64,ANDROID_X64,ANDROID_X86,LINUX_ARM32HFP,LINUX_ARM64,LINUX_MIPS32,LINUX_MIPSEL32,LINUX_X64,MINGW_X64,WASM,WASM_32"
      - name: Run Linux JVM Tests
        if: matrix.os == 'ubuntu-20.04'
        run: >
          ./gradlew check --stacktrace
          -PKMP_TARGETS="JVM"
      - name: Run Windows Tests
        if: matrix.os == 'windows-latest'
        run: >
          ./gradlew check --stacktrace
          -PKMP_TARGETS="JVM,JS,MINGW_X64,MINGW_X86,WASM,WASM_32"
      - name: Run Windows JVM Tests
        if: matrix.os == 'windows-2019'
        run: >
          ./gradlew check --stacktrace
          -PKMP_TARGETS="JVM"

  emulator:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        api-level: [ 21, 23, 26, 29 ]
        arch: [ x86_64 ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup JDK
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Build
        uses: gradle/gradle-build-action@v2

      - name: Run Android Instrumented Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          emulator-boot-timeout: 300 # 5 minutes
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          script: ./gradlew :library:driver-test:connectedCheck -PKMP_TARGETS="ANDROID,JVM"
